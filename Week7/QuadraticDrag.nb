(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     30231,        642]
NotebookOptionsPosition[     29548,        616]
NotebookOutlinePosition[     29886,        631]
CellTagsIndexPosition[     29843,        628]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", "9.8"}], 
  RowBox[{"(*", 
   RowBox[{"grav", ".", " ", "constant"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"vter", " ", "=", " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"m", " ", 
      RowBox[{"g", "/", "c"}]}], "]"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"V", " ", "=", " ", "50"}], "\[IndentingNewLine]", 
 RowBox[{"th", " ", "=", " ", 
  RowBox[{"50", "*", 
   RowBox[{"Pi", "/", "180"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"sol", " ", "=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vter", "=", "100"}], "}"}], ",", " ", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "''"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "g"}], " ", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "'"}], "[", "t", "]"}], "/", 
             RowBox[{"vter", "^", "2"}]}]}], ")"}], " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{
              RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], "]"}]}]}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "''"}], "[", "t", "]"}], " ", "\[Equal]", 
         RowBox[{
          RowBox[{"-", "g"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"y", "'"}], "[", "t", "]"}], "/", 
               RowBox[{"vter", "^", "2"}]}], ")"}], " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], "+", 
               RowBox[{
                RowBox[{
                 RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], "]"}]}]}],
            ")"}]}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "[", "0", "]"}], " ", "\[Equal]", " ", "2"}], ",", 
          " ", 
          RowBox[{
           RowBox[{"x", "[", "0", "]"}], " ", "\[Equal]", "0"}]}], "}"}], ",",
         " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "0", "]"}], " ", "\[Equal]", " ", 
           RowBox[{"V", " ", 
            RowBox[{"Sin", "[", "th", "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "0", "]"}], " ", "\[Equal]", 
           RowBox[{"V", " ", 
            RowBox[{"Cos", "[", "th", "]"}]}]}]}], "}"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "200"}], "}"}]}], "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.4941618998598137`*^9, 3.4941619588657084`*^9}, 
   3.49416200170741*^9, {3.494162159839367*^9, 3.494162264850087*^9}, {
   3.4941622953964167`*^9, 3.494162314363269*^9}, {3.494162429878344*^9, 
   3.494162429931975*^9}, {3.494162689372713*^9, 3.494162709813946*^9}, {
   3.4941627527093143`*^9, 3.494162752876684*^9}, {3.494162969971979*^9, 
   3.494162984039895*^9}, {3.494163074268774*^9, 3.494163197175642*^9}, {
   3.4941632664519243`*^9, 3.494163266509802*^9}, {3.494163302388669*^9, 
   3.494163302618104*^9}, {3.494167125909374*^9, 3.494167127043168*^9}, {
   3.494178629013938*^9, 3.4941786941328583`*^9}, {3.494178743416378*^9, 
   3.494178753982154*^9}, {3.494178806776251*^9, 3.49417889255365*^9}, {
   3.577548930912209*^9, 3.577549058993216*^9}, {3.57800059231745*^9, 
   3.578000730603203*^9}, {3.578000777212637*^9, 3.578001012667852*^9}, {
   3.578001078066093*^9, 3.578001092921767*^9}, {3.578001247695565*^9, 
   3.578001262906528*^9}, {3.578001321882934*^9, 3.578001368924841*^9}, {
   3.578001563845992*^9, 3.578001612718461*^9}, {3.578001713653885*^9, 
   3.578001775420133*^9}, {3.5780018990598*^9, 3.578002001265871*^9}, {
   3.578002280541518*^9, 3.578002281853243*^9}, {3.578063197704481*^9, 
   3.5780634320102043`*^9}, {3.5780634903338346`*^9, 3.578063531090312*^9}, 
   3.5780637276334143`*^9, {3.5780638310054483`*^9, 3.578063833473896*^9}, {
   3.578063976093205*^9, 3.578063996618487*^9}, {3.578064035567173*^9, 
   3.578064036965316*^9}, {3.578064382597447*^9, 3.578064466767356*^9}}],

Cell[BoxData["9.8`"], "Output",
 CellChangeTimes->{
  3.5780012676281147`*^9, 3.578001326228294*^9, {3.578001362763876*^9, 
   3.5780013776613817`*^9}, 3.578001613882588*^9, 3.578002015644658*^9, 
   3.5780022450276127`*^9, 3.578002283731163*^9, {3.578063053517932*^9, 
   3.578063057544549*^9}, 3.5780632101424437`*^9, 3.5780634084468*^9, {
   3.578063455109251*^9, 3.5780634580917397`*^9}, {3.5780635143700657`*^9, 
   3.578063533052587*^9}, 3.578063619058475*^9, 3.578063728386079*^9, 
   3.578063758889531*^9, 3.578063834193899*^9, {3.5780639861212683`*^9, 
   3.5780639979151897`*^9}, 3.578064038096046*^9, 3.578064395249988*^9, {
   3.5780644673120623`*^9, 3.578064469781095*^9}}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{
  3.5780012676281147`*^9, 3.578001326228294*^9, {3.578001362763876*^9, 
   3.5780013776613817`*^9}, 3.578001613882588*^9, 3.578002015644658*^9, 
   3.5780022450276127`*^9, 3.578002283731163*^9, {3.578063053517932*^9, 
   3.578063057544549*^9}, 3.5780632101424437`*^9, 3.5780634084468*^9, {
   3.578063455109251*^9, 3.5780634580917397`*^9}, {3.5780635143700657`*^9, 
   3.578063533052587*^9}, 3.578063619058475*^9, 3.578063728386079*^9, 
   3.578063758889531*^9, 3.578063834193899*^9, {3.5780639861212683`*^9, 
   3.5780639979151897`*^9}, 3.578064038096046*^9, 3.578064395249988*^9, {
   3.5780644673120623`*^9, 3.578064469793585*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"5", " ", "\[Pi]"}], "18"]], "Output",
 CellChangeTimes->{
  3.5780012676281147`*^9, 3.578001326228294*^9, {3.578001362763876*^9, 
   3.5780013776613817`*^9}, 3.578001613882588*^9, 3.578002015644658*^9, 
   3.5780022450276127`*^9, 3.578002283731163*^9, {3.578063053517932*^9, 
   3.578063057544549*^9}, 3.5780632101424437`*^9, 3.5780634084468*^9, {
   3.578063455109251*^9, 3.5780634580917397`*^9}, {3.5780635143700657`*^9, 
   3.578063533052587*^9}, 3.578063619058475*^9, 3.578063728386079*^9, 
   3.578063758889531*^9, 3.578063834193899*^9, {3.5780639861212683`*^9, 
   3.5780639979151897`*^9}, 3.578064038096046*^9, 3.578064395249988*^9, {
   3.5780644673120623`*^9, 3.578064470309885*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     TagBox[
      RowBox[{"InterpolatingFunction", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
       "]"}],
      False,
      Editable->False]}], ",", 
    RowBox[{"y", "\[Rule]", 
     TagBox[
      RowBox[{"InterpolatingFunction", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
       "]"}],
      False,
      Editable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5780012676281147`*^9, 3.578001326228294*^9, {3.578001362763876*^9, 
   3.5780013776613817`*^9}, 3.578001613882588*^9, 3.578002015644658*^9, 
   3.5780022450276127`*^9, 3.578002283731163*^9, {3.578063053517932*^9, 
   3.578063057544549*^9}, 3.5780632101424437`*^9, 3.5780634084468*^9, {
   3.578063455109251*^9, 3.5780634580917397`*^9}, {3.5780635143700657`*^9, 
   3.578063533052587*^9}, 3.578063619058475*^9, 3.578063728386079*^9, 
   3.578063758889531*^9, 3.578063834193899*^9, {3.5780639861212683`*^9, 
   3.5780639979151897`*^9}, 3.578064038096046*^9, 3.578064395249988*^9, {
   3.5780644673120623`*^9, 3.578064470334786*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "200"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "250"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.494162004524008*^9, 3.494162076852659*^9}, {
   3.494162433062894*^9, 3.494162433108081*^9}, {3.494162592059354*^9, 
   3.4941625983662167`*^9}, {3.494162757151064*^9, 3.494162787005321*^9}, {
   3.4941628547936563`*^9, 3.494162856894761*^9}, {3.494162887335985*^9, 
   3.494162892983869*^9}, {3.494162976794415*^9, 3.494163001498172*^9}, {
   3.494163071893292*^9, 3.4941630719595547`*^9}, {3.494163240196003*^9, 
   3.494163243631948*^9}, {3.494178674109873*^9, 3.494178699548072*^9}, {
   3.577549065982582*^9, 3.577549072700952*^9}, 3.577549145166576*^9, {
   3.578001145692832*^9, 3.578001156270012*^9}, {3.5780013033592243`*^9, 
   3.578001306931282*^9}, {3.578002036185677*^9, 3.578002074966894*^9}, {
   3.578002126797015*^9, 3.578002163054182*^9}, {3.5780021942990627`*^9, 
   3.578002195347291*^9}, {3.578063644596403*^9, 3.5780637135895863`*^9}, {
   3.578063769428611*^9, 3.578063782786524*^9}, {3.578063848888526*^9, 
   3.578063852432969*^9}, {3.578063944328949*^9, 3.578063951254238*^9}, {
   3.5780640050433826`*^9, 3.578064011872773*^9}, {3.578064050229897*^9, 
   3.578064071854723*^9}, {3.5780641475281057`*^9, 3.578064165594733*^9}, {
   3.578064196640983*^9, 3.578064224668228*^9}, {3.5780642565856447`*^9, 
   3.5780643092608128`*^9}, {3.578064479902738*^9, 3.578064503201754*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 250}, {0, 250}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.5780637843638153`*^9, 3.5780638393049307`*^9, 3.57806395269668*^9, {
   3.578063990007592*^9, 3.57806407285851*^9}, {3.578064153662162*^9, 
   3.578064166215294*^9}, {3.578064203711432*^9, 3.578064225263404*^9}, {
   3.578064263469103*^9, 3.578064317111073*^9}, 3.5780643973821163`*^9, {
   3.57806447346509*^9, 3.578064503717059*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4941620805077047`*^9, 3.494162130559312*^9}, {
  3.494162438686253*^9, 3.4941624388214483`*^9}, {3.49416276111087*^9, 
  3.4941627612842607`*^9}, {3.494163076540534*^9, 3.494163076603696*^9}, {
  3.4941632000470552`*^9, 3.494163201262197*^9}, {3.494163247872136*^9, 
  3.494163268710841*^9}, {3.494163305169607*^9, 3.494163305408745*^9}, {
  3.4941671378365726`*^9, 3.494167137896326*^9}, {3.494178681693411*^9, 
  3.494178704379784*^9}, {3.577549081756276*^9, 3.5775491266935997`*^9}, {
  3.5780011837523413`*^9, 3.578001202498152*^9}, {3.578063593682395*^9, 
  3.578063594026628*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.494162134647728*^9, 3.4941621507573*^9}, {
   3.4941622413147984`*^9, 3.494162255928239*^9}, {3.494162609064744*^9, 
   3.494162610408478*^9}, {3.494163058283469*^9, 3.494163060738275*^9}, {
   3.578063560295467*^9, 3.5780635984410152`*^9}, 3.578064337092784*^9}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"[", 
       RowBox[{"sol", "=", 
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"x", "''"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "g"}], " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "'"}], "[", "t", "]"}], "/", 
                 RowBox[{"vter", "^", "2"}]}]}], ")"}], " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{
                  RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], 
               "]"}]}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"y", "''"}], "[", "t", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"-", "g"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"y", "'"}], "[", "t", "]"}], "/", 
                   RowBox[{"vter", "^", "2"}]}], ")"}], " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}], "+", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"y", "'"}], "[", "t", "]"}], "^", "2"}]}], 
                  "]"}]}]}], ")"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"y", "[", "0", "]"}], "\[Equal]", "2"}], ",", 
              RowBox[{
               RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
               RowBox[{"V", " ", 
                RowBox[{"Sin", "[", "th", "]"}]}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", 
               RowBox[{"V", " ", 
                RowBox[{"Cos", "[", "th", "]"}]}]}]}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "200"}], "}"}]}], "]"}]}], "]"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "200"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "250"}], "}"}]}]}], "]"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"V", ",", "0.5", ",", "\"\<Initial Velocity (m/s)\>\""}], "}"}],
      ",", "0", ",", "100", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"th", ",", 
       RowBox[{"20", "*", 
        RowBox[{"Pi", "/", "180"}]}], ",", "\"\<initial angle (rad)\>\""}], 
      "}"}], ",", ".1", ",", 
     RowBox[{"\[Pi]", "/", "2"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vter", ",", "0", ",", "\"\<Terminal Velocity (rad/s)\>\""}], 
      "}"}], ",", "0", ",", "100.", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "\"\<Time (s))\>\""}], "}"}], ",", "0", ",",
      "20.", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.577478475599698*^9, 3.5774784997979183`*^9}, {
   3.577478534848688*^9, 3.577478567062739*^9}, 3.577490072664493*^9, {
   3.577502720630567*^9, 3.5775027514202127`*^9}, 3.5775030057285748`*^9, 
   3.577503078429886*^9, {3.577503108611413*^9, 3.577503166858922*^9}, {
   3.577549179281249*^9, 3.577549221102922*^9}, {3.577549268358193*^9, 
   3.577549405114224*^9}, {3.577549553049855*^9, 3.577549582375984*^9}, 
   3.577549627541086*^9, {3.57754973813801*^9, 3.577549829233026*^9}, {
   3.57754987411872*^9, 3.5775499131013613`*^9}, {3.577549955916011*^9, 
   3.5775499892251*^9}, {3.577550221132785*^9, 3.5775502214075537`*^9}, {
   3.577550744443714*^9, 3.5775508053235483`*^9}, {3.578064562029634*^9, 
   3.578064563691697*^9}, {3.57806460967663*^9, 3.578064657539666*^9}, {
   3.578064693122987*^9, 3.578064864012268*^9}, {3.578064906336418*^9, 
   3.578064924147957*^9}},
 EmphasizeSyntaxErrors->True]
},
WindowSize->{799, 739},
WindowMargins->{{236, Automatic}, {-57, Automatic}},
FrontEndVersion->"8.0 for Linux x86 (64-bit) (October 10, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 4558, 110, 202, "Input"],
Cell[5128, 134, 686, 10, 30, "Output"],
Cell[5817, 146, 684, 10, 30, "Output"],
Cell[6504, 158, 731, 12, 47, "Output"],
Cell[7238, 172, 1300, 33, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8575, 210, 1771, 31, 30, "Input"],
Cell[10349, 243, 12876, 216, 366, "Output"]
}, Open  ]],
Cell[23240, 462, 635, 9, 30, "Input"],
Cell[23878, 473, 312, 4, 30, "Input"],
Cell[24193, 479, 5351, 135, 221, "Input"]
}
]
*)

(* End of internal cache information *)
